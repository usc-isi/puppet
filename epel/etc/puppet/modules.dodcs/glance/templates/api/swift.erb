###                ###
#   Begin swift.erb  #
###                ###
# ============ Swift Store Options =============================

# Address where the Swift authentication service lives
swift_store_auth_address = <%= config['swift_store_auth_address'] %>

# User to authenticate against the Swift authentication service
swift_store_user = <%= config['swift_store_user'] %>

# Auth key for the user authenticating against the
# Swift authentication service
swift_store_key = <%= config['swift_store_key'] %>

# Container within the account that the account should use
# for storing images in Swift
swift_store_container = <%= config['swift_store_container'] %>

# Do we create the container if it does not exist?
swift_store_create_container_on_put = <%= config['swift_store_create_container_on_put'] %>


# What size, in MB, should Glance start chunking image files
# and do a large object manifest in Swift? By default, this is
# the maximum object size in Swift, which is 5GB
swift_store_large_object_size = 5120

# When doing a large object manifest, what size, in MB, should
# Glance write chunks to Swift? This amount of data is written
# to a temporary disk buffer during the process of chunking
# the image file, and the default is 200MB
swift_store_large_object_chunk_size = 200

# Whether to use ServiceNET to communicate with the Swift storage servers.
# (If you aren't RACKSPACE, leave this False!)
#
# To use ServiceNET for authentication, prefix hostname of
# `swift_store_auth_address` with 'snet-'.
# Ex. https://example.com/v1.0/ -> https://snet-example.com/v1.0/
swift_enable_snet = False

# If set to True enables multi-tenant storage mode which causes Glance images
# to be stored in tenant specific Swift accounts.
#swift_store_multi_tenant = False

# A list of tenants that will be granted read/write access on all Swift
# containers created by Glance in multi-tenant mode.
#swift_store_admin_tenants = []

# The region of the swift endpoint to be used for single tenant. This setting
# is only necessary if the tenant has multiple swift endpoints.
#swift_store_region =

###              ###
#   End swift.erb  #
###              ###
